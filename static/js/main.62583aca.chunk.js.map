{"version":3,"sources":["App.tsx","services/redux/types/PostTypes.ts","services/redux/reducers/PostReducer.ts","services/redux/reducers/PeopleReducer.ts","services/redux/reducers/index.ts","services/redux/store/index.ts","index.tsx"],"names":["App","GET_POSTS","initialStateGetPosts","posts","rootReducer","combineReducers","state","action","type","payload","people","concat","id","length","name","filter","person","store","createStore","composeWithDevTools","applyMiddleware","thunkMiddleware","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"2KASeA,EAJO,WAClB,OAAO,8C,8BCJEC,EAAY,YCKnBC,EAA0C,CAC5CC,MAAO,ICKJ,ICJQC,EALKC,0BAAgB,CAChCF,MFM2B,WAGN,IAFrBG,EAEoB,uDAFZJ,EACRK,EACoB,uCACpB,OAAQA,EAAOC,MACX,KAAKP,EACD,OAAO,2BACAK,GADP,IAEIH,MAAOI,EAAOE,UAOtB,QACI,OAAOH,IErBfI,ODOyB,WAA4C,IAA3CJ,EAA0C,uDAAxB,GAAIC,EAAoB,uCACpE,OAAQA,EAAOC,MACX,IAAK,YACD,OAAOF,EAAMK,OAAO,CAChBC,GAAIN,EAAMO,OAAS,EACnBC,KAAMP,EAAOE,UAErB,IAAK,eACD,OAAOH,EAAMS,QAAO,SAACC,GAAD,OAAYA,EAAOJ,KAAOL,EAAOE,WAI7D,OAAOH,KEdIW,EANDC,sBACVd,EACAe,8BAAoBC,0BAAgBC,OCAxCC,IAASC,OACL,cAAC,IAAMC,WAAP,UACI,cAAC,IAAD,CAAUP,MAAOA,EAAjB,SACI,cAAC,EAAD,QAGRQ,SAASC,eAAe,W","file":"static/js/main.62583aca.chunk.js","sourcesContent":["// import React, { FC, useState, useRef, useEffect } from 'react'\n\n// import Button from './components/atoms/Button'\n// import Text from './components/atoms/Text/Text'\n\nconst App: React.FC = () => {\n    return <div>testing...</div>\n}\n\nexport default App\n","import { Post } from '../interfaces/Post'\n\nexport const GET_POSTS = 'GET_POSTS'\nexport const TEST1 = 'TEST1'\n\nexport interface GetPostsStateType {\n    posts: Post[]\n}\n\ninterface GetPostsActionType {\n    type: typeof GET_POSTS\n    payload: Post[]\n}\nexport type PostActionTypes = GetPostsActionType\n","import {\n    GET_POSTS,\n    // TEST1,\n    GetPostsStateType,\n    PostActionTypes,\n} from '../types/PostTypes'\n\nconst initialStateGetPosts: GetPostsStateType = {\n    posts: [],\n}\n\nexport const getPostsReducer = (\n    state = initialStateGetPosts,\n    action: PostActionTypes\n): GetPostsStateType => {\n    switch (action.type) {\n        case GET_POSTS:\n            return {\n                ...state,\n                posts: action.payload,\n            }\n        // case TEST1:\n        //     return {\n        //         ...state,\n        //         posts: action.payload,\n        //     }\n        default:\n            return state\n    }\n}\n","/* eslint-disable @typescript-eslint/no-unused-vars */\n/* eslint-disable @typescript-eslint/explicit-module-boundary-types */\n/* eslint-disable @typescript-eslint/no-empty-function */\n/* eslint-disable @typescript-eslint/explicit-function-return-type */\nimport { Actions } from '../actions/PersonActions'\n\ntype Person = {\n    id: number\n    name: string\n}\n\nfunction neverReached(_never: never) {}\n\nexport const peopleReducer = (state: Person[] = [], action: Actions) => {\n    switch (action.type) {\n        case 'AddPerson':\n            return state.concat({\n                id: state.length + 1,\n                name: action.payload,\n            })\n        case 'RemovePerson':\n            return state.filter((person) => person.id !== action.payload)\n        default:\n            neverReached(action)\n    }\n    return state\n}\n","import { combineReducers } from 'redux'\nimport { getPostsReducer } from './PostReducer'\nimport { peopleReducer } from './PeopleReducer'\n\nconst rootReducer = combineReducers({\n    posts: getPostsReducer,\n    people: peopleReducer,\n})\n\nexport default rootReducer\n","import { createStore, applyMiddleware } from 'redux'\nimport thunkMiddleware from 'redux-thunk'\nimport { composeWithDevTools } from 'redux-devtools-extension'\nimport rootReducer from '../reducers'\n\nconst store = createStore(\n    rootReducer,\n    composeWithDevTools(applyMiddleware(thunkMiddleware))\n)\n\nexport type AppState = ReturnType<typeof rootReducer>\nexport default store\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport { Provider } from 'react-redux'\nimport App from './App'\nimport store from './services/redux/store/index'\n// import reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n    <React.StrictMode>\n        <Provider store={store}>\n            <App />\n        </Provider>\n    </React.StrictMode>,\n    document.getElementById('root')\n)\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n// reportWebVitals(console.log);\n"],"sourceRoot":""}